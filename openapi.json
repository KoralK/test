{
  "openapi": "3.0.2",
  "info": {
    "title": "Unofficial Medium API",
    "version": "1.0",
    "x-twitter": "https://twitter.com/medium_api",
    "x-linkedin": "https://www.linkedin.com/company/medium-api",
    "x-logo": {
      "url": "https://mediumapi.com/imgs/logo/logo-primary-color.svg"
    },
    "description": "Our Unofficial Medium API helps you to quickly extract data from Medium's Website (https://medium.com). \n\nYou can gather data related to users, publications, articles (including its textual content), latest posts & top writers within a topic/niche, etcâ€¦\n",
    "contact": {
      "name": "Nishu Jain",
      "email": "nishu@mediumapi.com",
      "url": "https://mediumapi.com"
    },
    "termsOfService": "https://github.com/weeping-angel/medium-apis/raw/pages/terms_of_use.pdf"
  },
  "tags": [
    {
      "name": "Welcome"
    },
    {
      "name": "User"
    },
    {
      "name": "Publication"
    },
    {
      "name": "Article"
    },
    {
      "name": "Misc"
    },
    {
      "name": "List"
    },
    {
      "name": "Search"
    }
  ],
  "externalDocs": {
    "description": "Read more",
    "url": "https://mediumapi.com/documentation.html"
  },
  "servers": [
    {
      "url": "https://medium2.p.rapidapi.com"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Get Welcome",
        "tags": [
          "Welcome"
        ],
        "description": "**Test Endpoint**\nReturns the information about the Unofficial Medium API\n",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Full name of the API",
                      "example": "Unofficial Medium API"
                    },
                    "developer": {
                      "type": "string",
                      "description": "Full name of the API's developer",
                      "example": "Nishu Jain"
                    },
                    "email": {
                      "type": "string",
                      "description": "Email ID of the developer",
                      "example": "nishu@mediumapi.com"
                    },
                    "website": {
                      "type": "string",
                      "description": "Link to the Medium API's website",
                      "example": "https://mediumapi.com"
                    },
                    "documentation": {
                      "type": "string",
                      "description": "Link to the API's documentation",
                      "example": "https://docs.mediumapi.com"
                    },
                    "twitter": {
                      "type": "string",
                      "description": "Twitter Profile URL",
                      "example": "https://twitter.com/medium_api"
                    },
                    "linkedin": {
                      "type": "string",
                      "description": "LinkedIn Page URL",
                      "example": "https://www.linkedin.com/company/medium-api"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/id_for/{username}": {
      "get": {
        "summary": "Get User ID",
        "tags": [
          "User"
        ],
        "description": "Returns the unique `user_id` for the given `username`.\n\n**Note:** You can find the `username` from the user's/author's profile page URL. \n- **username**.medium.com\n- medium.com/@**username**\n",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "It's a unique string chosen by every single Medium user.",
            "schema": {
              "type": "string",
              "example": "nishu-jain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique hash id of the user.",
                      "example": "1985b61817c3"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}": {
      "get": {
        "summary": "Get User Info",
        "tags": [
          "User"
        ],
        "description": "Returns user related information like *Full name, Bio, Followers count, Following count, Twitter username, Profile-image URL, User ID, etc...* \n\nIt takes `user_id` as the path parameter.\n\n**Note:** If you don't know the `user_id`, then you can get it from the endpoint\\\n'/user/id_for/{`username`}'.\n",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every single Medium user.",
            "schema": {
              "type": "string",
              "example": "1985b61817c3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1985b61817c3"
                    },
                    "username": {
                      "type": "string",
                      "example": "nishu-jain"
                    },
                    "fullname": {
                      "type": "string",
                      "example": "Nishu Jain"
                    },
                    "bio": {
                      "type": "string",
                      "example": "Obsessed with Tech Biz Arts & Words; Does NOT dumb down the writing; Skilled Wordsmith; Delivers the best"
                    },
                    "top_writer_in": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "programming"
                      }
                    },
                    "followers_count": {
                      "type": "integer",
                      "format": "int32",
                      "example": 450
                    },
                    "following_count": {
                      "type": "integer",
                      "format": "int32",
                      "example": 4
                    },
                    "twitter_username": {
                      "type": "string",
                      "example": "one_anachronism"
                    },
                    "is_writer_program_enrolled": {
                      "type": "boolean"
                    },
                    "is_suspended": {
                      "type": "boolean",
                      "example": false
                    },
                    "has_list": {
                      "type": "boolean",
                      "example": true
                    },
                    "is_book_author": {
                      "type": "boolean",
                      "example": false
                    },
                    "allow_notes": {
                      "type": "boolean"
                    },
                    "medium_member_at": {
                      "type": "string",
                      "example": "2020-06-24 16:05:46"
                    },
                    "image_url": {
                      "type": "string",
                      "example": "https://miro.medium.com/1*C92Hx7k9nRM7TPlrmhgW9w.jpeg"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}/following": {
      "get": {
        "summary": "Get User Following",
        "tags": [
          "User"
        ],
        "description": "Returns the list of `user_ids` of the user's followings.\n\n**Note:** Currently, this list does not contain the `publication_ids` of the publications that the user is following.\n",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "Unique hash id assigned to every single Medium user.",
            "schema": {
              "type": "string",
              "example": "14d5c41e0264"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "description": "To limit the number of results. (count < 1500)",
            "schema": {
              "type": "int",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "following": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "c61f93eeb8a5"
                      }
                    },
                    "id": {
                      "type": "string",
                      "example": "14d5c41e0264"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}/followers": {
      "get": {
        "summary": "Get User Followers",
        "tags": [
          "User"
        ],
        "description": "Returns the list of `user_ids` of the user's followers.\n\n**Note:** When you get the response from the API, it will include an attribute called `next`.  You can use this next attribute as query string parameter (`after`) when you make your next API request.  This way, you can get the followers that come after the one you're currently looking at.\n",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "Unique hash id assigned to every single Medium user.",
            "schema": {
              "type": "string",
              "example": "1985b61817c3"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "description": "To limit the number of results. (count <= 25)",
            "schema": {
              "type": "int",
              "example": 10
            }
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "description": "To get the results after a particular follower's user id.",
            "schema": {
              "type": "string",
              "example": "14274b746ca3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "followers": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "1556eaf34b46"
                      }
                    },
                    "id": {
                      "type": "string",
                      "example": "1985b61817c3"
                    },
                    "count": {
                      "type": "int",
                      "example": 10
                    },
                    "next": {
                      "type": "string",
                      "example": "19cad4233712"
                    },
                    "total_followers": {
                      "type": "int",
                      "example": 551
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}/articles": {
      "get": {
        "summary": "Get User's Articles",
        "tags": [
          "User"
        ],
        "description": "Returns the list of articles (`article_ids`) written by the user.\n",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "Unique hash id assigned to every single Medium user.",
            "schema": {
              "type": "string",
              "example": "1985b61817c3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "associated_articles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "562c5821b5f0"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}/top_articles": {
      "get": {
        "summary": "Get User's Top Articles",
        "tags": [
          "User"
        ],
        "description": "Returns a list of `article_ids` of the top 10 articles on the user's profile, for a given `user_id`.\n",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "Unique hash id assigned to every single Medium user.",
            "schema": {
              "type": "string",
              "example": "1985b61817c3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "associated_articles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "562c5821b5f0"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}/interests": {
      "get": {
        "summary": "Get User's Interests",
        "tags": [
          "User"
        ],
        "description": "Returns a list of tags that the given user follows.\n",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "Unique hash id assigned to every single Medium user.",
            "schema": {
              "type": "string",
              "example": "1985b61817c3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tags_followed": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "software-engineering"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}/lists": {
      "get": {
        "summary": "Get User's Lists",
        "tags": [
          "User"
        ],
        "description": "Returns an array of `list_ids` created by the user.\n\n**Note:** You can check whether the use has created lists or not beforehand. Check the  `has_list` attribute in the \"Article Info\" endpoint.\n",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "Unique hash id assigned to every single Medium user.",
            "schema": {
              "type": "string",
              "example": "5142451174a3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lists": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "95b41261bee0"
                      }
                    },
                    "user_id": {
                      "type": "string",
                      "example": "5142451174a3"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}/publications": {
      "get": {
        "summary": "Get User's Publications",
        "tags": [
          "User"
        ],
        "description": "Returns a list of `publication_ids` where the user is the editor and/or creator.\n",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "Unique hash id assigned to every single Medium user.",
            "schema": {
              "type": "string",
              "example": "14d5c41e0264"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "publications": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "bff2346ccdf1"
                      }
                    },
                    "user_id": {
                      "type": "string",
                      "example": "14d5c41e0264"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/article/{article_id}": {
      "get": {
        "summary": "Get Article Info",
        "tags": [
          "Article"
        ],
        "description": "Returns the article related information such as *Title, Subtitle, Tags,  Topics* (assigned by Medium), *Publication, Published date and time,  Clap Count, Voter Count, Word Count, Reading Time, Language, etcâ€¦*\n",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium Article.",
            "schema": {
              "type": "string",
              "example": "f06086080568"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "f06086080568"
                    },
                    "title": {
                      "type": "string",
                      "example": "4 Tips to Strengthen Your Bonds â€”â€ŠNow"
                    },
                    "subtitle": {
                      "type": "string",
                      "example": "Re-energize your relationship in the midst of a crisis"
                    },
                    "author": {
                      "type": "string",
                      "example": "1985b61817c3"
                    },
                    "publication_id": {
                      "type": "string",
                      "example": "e7040e67514c"
                    },
                    "responses_count": {
                      "type": "integer",
                      "format": "int32",
                      "example": 10
                    },
                    "word_count": {
                      "type": "integer",
                      "format": "int32",
                      "example": 845
                    },
                    "reading_time": {
                      "type": "number",
                      "example": 3.5720125786164
                    },
                    "topics": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "mental-health"
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "relationships"
                      }
                    },
                    "claps": {
                      "type": "integer",
                      "format": "int32",
                      "example": 53
                    },
                    "voters": {
                      "type": "integer",
                      "format": "int32",
                      "example": 3
                    },
                    "is_series": {
                      "type": "boolean",
                      "example": false
                    },
                    "is_locked": {
                      "type": "boolean",
                      "example": true
                    },
                    "lang": {
                      "type": "string",
                      "example": "en"
                    },
                    "published_at": {
                      "type": "string",
                      "example": "2020-08-25 11:08:18"
                    },
                    "last_modified_at": {
                      "type": "string",
                      "example": "2021-05-28 04:22:48"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://medium.com/age-of-awareness/re-energizing-your-relationship-in-the-midst-of-a-crisis-f06086080568"
                    },
                    "image_url": {
                      "type": "string",
                      "example": "https://miro.medium.com/1*W0wM9xIeeIR3_Oo0E_thaA.png"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/article/{article_id}/content": {
      "get": {
        "summary": "Get Article's Content",
        "tags": [
          "Article"
        ],
        "description": "Returns the content of an article/story, for the corresponding `article_id`\n",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium Article.",
            "schema": {
              "type": "string",
              "example": "562c5821b5f0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string",
                      "example": "Article title\nArticle Subtitle\nArticle Content ....\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/article/{article_id}/markdown": {
      "get": {
        "summary": "Get Article's Markdown",
        "tags": [
          "Article"
        ],
        "description": "Returns the markdown of an article/story from Medium, for the corresponding `article_id`\n",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium Article.",
            "schema": {
              "type": "string",
              "example": "67fa62fc1971"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "markdown": {
                      "type": "string",
                      "example": "# Article title\n## Article Subtitle\nArticle **Content** with lot of _markups_ ....\n![Images Alt](Image URL)\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/article/{article_id}/html": {
      "get": {
        "summary": "Get Article's HTML",
        "tags": [
          "Article"
        ],
        "description": "Returns the plain HTML of a Medium Article, for the corresponding `article_id`\n",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium Article.",
            "schema": {
              "type": "string",
              "example": "ff6369938b63"
            }
          },
          {
            "name": "fullpage",
            "in": "query",
            "required": false,
            "description": "If 'true', returns full HTML page with head, body, title and meta tags. Else, returns HTML inside body only.",
            "schema": {
              "type": "bool",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "html": {
                      "type": "string",
                      "example": "<div class=\"blog\">\n  <h1 id=\"abcd\">Article Title<h1>\n  <p>This is a <b>paragraph</b></p>\n  <img src=\"https://example.com/img.png\" alt=\"Image caption\" />\n</div>\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/article/{article_id}/responses": {
      "get": {
        "summary": "Get Article Responses",
        "tags": [
          "Article"
        ],
        "description": "Returns a list of responses (`response_ids`, same as `article_ids`) for a given article (`article_id`)\nNote: To see the content of the response, use the \"Get Article's Content\" endpoint\n",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium Article.",
            "schema": {
              "type": "string",
              "example": "67fa62fc1971"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "responses": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "a9bbc22aa1e6"
                      }
                    },
                    "id": {
                      "type": "string",
                      "example": "67fa62fc1971"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/article/{article_id}/fans": {
      "get": {
        "summary": "Get Article Fans",
        "tags": [
          "Article"
        ],
        "description": "Returns a list of `user_ids` of the people who clapped on the article (a.k.a `voters`).\n",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium Article.",
            "schema": {
              "type": "string",
              "example": "67fa62fc1971"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "voters": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "fa40650a485"
                      }
                    },
                    "article_id": {
                      "type": "string",
                      "example": "67fa62fc1971"
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "example": 145
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/article/{article_id}/related": {
      "get": {
        "summary": "Get Related Articles",
        "tags": [
          "Article"
        ],
        "description": "Returns a list of `article_ids` of the related posts. (Length = 4)\n",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium Article.",
            "schema": {
              "type": "string",
              "example": "67fa62fc1971"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "related_articles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "f393206c6626"
                      }
                    },
                    "id": {
                      "type": "string",
                      "example": "67fa62fc1971"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/publication/id_for/{publication_slug}": {
      "get": {
        "summary": "Get Publication ID",
        "tags": [
          "Publication"
        ],
        "description": "Returns the unique `publication_id` for the given `publication_slug`.\n\n**Note:** You can find the `publication_slug` from the publication's homepage URL.\n- medium.com/**publication_slug**\n",
        "parameters": [
          {
            "name": "publication_slug",
            "in": "path",
            "required": true,
            "description": "It's a lowercased hyphen-separated unique string alloted to each Medium Publication.",
            "schema": {
              "type": "string",
              "example": "codex"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "publication_id": {
                      "type": "string",
                      "description": "Unique hash id of the publication.",
                      "example": "29038077e4c6"
                    },
                    "publication_slug": {
                      "type": "string",
                      "description": "Same publication slug that you passed in the path parameters.",
                      "example": "codex"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/publication/{publication_id}": {
      "get": {
        "summary": "Get Publication Info",
        "tags": [
          "Publication"
        ],
        "description": "Returns the publication related information such as *Publication name, Tagline, Description, Tags, Followers Count, Twitter username, Instagram username, Facebook Page name, etc â€¦*\n\n**Note:** If you don't know the `publication_id`, you can get it from any article published by it. Use endpoint \"/article/{article_id}\" to retrieve the `publication_id`.\n",
        "parameters": [
          {
            "name": "publication_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium Publication.",
            "schema": {
              "type": "string",
              "example": "98111c9905da"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "98111c9905da"
                    },
                    "name": {
                      "type": "string",
                      "example": "Towards AI"
                    },
                    "tagline": {
                      "type": "string",
                      "example": "The World's Leading AI and Technology Publication"
                    },
                    "description": {
                      "type": "string",
                      "example": "Towards AI is the world's leading AI and technology publication. Publishing unbiased AI and technology-related articles. Read by thought-leaders and decision-makers around the world."
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "ARTIFICIAL INTELLIGENCE"
                      }
                    },
                    "followers": {
                      "type": "integer",
                      "format": "int32",
                      "example": 25260
                    },
                    "instagram_username": {
                      "type": "string",
                      "example": "towards_ai"
                    },
                    "facebook_pagename": {
                      "type": "string",
                      "example": "towardsAl"
                    },
                    "url": {
                      "type": "string",
                      "example": "pub.towardsai.net"
                    },
                    "slug": {
                      "type": "string",
                      "example": "towards-artificial-intelligence"
                    },
                    "twitter_username": {
                      "type": "string",
                      "example": "towards_AI"
                    },
                    "creator": {
                      "type": "string",
                      "example": "8a819983d566"
                    },
                    "editors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "aea8a19ea239"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/publication/{publication_id}/articles": {
      "get": {
        "summary": "Get Publication Articles",
        "tags": [
          "Publication"
        ],
        "description": "Returns the list of `articles_ids`, of the latest 25 articles, posted in that publication.\n",
        "parameters": [
          {
            "name": "publication_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium Publication.",
            "schema": {
              "type": "string",
              "example": "98111c9905da"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "description": "To get the articles before specified date and time.",
            "schema": {
              "type": "string",
              "example": "2023-01-31T13:10:00"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "publication_articles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "67fa62fc1971"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/publication/{publication_id}/newsletter": {
      "get": {
        "summary": "Get Publication Newsletter",
        "tags": [
          "Publication"
        ],
        "description": "Returns the newsletter related information such as *id, name, description, slug, creator_id, subscribers, image_url, etc â€¦*\n\n**Note:** If you don't know the `publication_id`, you can get it from any article published by it. Use endpoint \"/article/{article_id}\" to retrieve the `publication_id`.\n",
        "parameters": [
          {
            "name": "publication_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium Publication.",
            "schema": {
              "type": "string",
              "example": "98111c9905da"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "d710a73cd042"
                    },
                    "name": {
                      "type": "string",
                      "example": "This AI newsletter is all you need"
                    },
                    "description": {
                      "type": "string",
                      "example": "We have moved our newsletter. Subscribe â†’ https://ws.towardsai.net/subscribe"
                    },
                    "subscribers": {
                      "type": "integer",
                      "format": "int32",
                      "example": 6752
                    },
                    "slug": {
                      "type": "string",
                      "example": "this-ai-newsletter-is-all-you-need"
                    },
                    "creator_id": {
                      "type": "string",
                      "example": "aea8a19ea239"
                    },
                    "image": {
                      "type": "string",
                      "example": "https://miro.medium.com/1*j2OVd7j2o2FHeE7T8TzpXw.png"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/topfeeds/{tag}/{mode}": {
      "get": {
        "summary": "Get Topfeeds",
        "tags": [
          "Misc"
        ],
        "description": "Returns a list of `article_ids` (length: 25) for the given `tag` and `mode`.\n",
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "description": "It's a unique string, usually hyphen-separated, representing a class of content.",
            "schema": {
              "type": "string",
              "example": "artificial-intelligence"
            }
          },
          {
            "name": "mode",
            "in": "path",
            "required": true,
            "description": "Mode:\n\n  - `hot` : For getting trending articles\n  - `new` : For getting latest articles\n  - `top_year` : For getting best articles of the year\n  - `top_month` : For getting best articles of the month\n  - `top_week` : For getting best articles of the week\n  - `top_all_time`: For getting best article of all time\n",
            "schema": {
              "type": "string",
              "example": "new"
            }
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "description": "To get the subsequent top feeds. (`after` < 250)",
            "schema": {
              "type": "int",
              "example": 10,
              "default": 0
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "description": "To limit the number of top feeds. (`count` < 25)",
            "schema": {
              "type": "int",
              "example": 20,
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "topfeeds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "b2076afc4930"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/top_writers/{topic_slug}": {
      "get": {
        "summary": "Get Top Writers",
        "tags": [
          "Misc"
        ],
        "description": "Returns a list of top writers (`user_ids`) within a particular topic/niche (`topic_slug`). \ne.g. \n- blockchain\n- relationships\n- artificial-intelligence, etc ...\n\n**Note:** You can use optional `count` query parameter to limit the number of results.  The maximum number of top writers within a topic/niche will be 250.\n",
        "parameters": [
          {
            "name": "topic_slug",
            "in": "path",
            "required": true,
            "description": "It's a unique string, usually hyphen-separated, representing a topic/niche, as classified by Medium.",
            "schema": {
              "type": "string",
              "example": "relationships"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "description": "Limits the number of `article_ids` in the result.",
            "schema": {
              "type": "int",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "top_writers": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "1985b61817c3"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/latestposts/{topic_slug}": {
      "get": {
        "summary": "Get Latest Posts",
        "tags": [
          "Misc"
        ],
        "description": "Returns a list of latest posts (`article_ids`) for a topic/niche (as classified by the Medium platform). Example of a topic/niche can be:\n* blockchain\n* relationships\n* mental-health, etc â€¦\n\nThese are known as `topic_slugs`. At any given moment, this endpoint will return a list of 25 articles (`article_ids`).\n",
        "parameters": [
          {
            "name": "topic_slug",
            "in": "path",
            "required": true,
            "description": "It's a unique string, usually hyphen-separated, representing a topic/niche, as classified by Medium.",
            "schema": {
              "type": "string",
              "example": "artificial-intelligence"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "latestposts": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "67fa62fc1971"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/related_tags/{tag}": {
      "get": {
        "summary": "Get Related Tags",
        "tags": [
          "Misc"
        ],
        "description": "Returns a list of `related_tags` for the given `tag`.\n",
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "description": "It's a unique string, usually hyphen-separated, representing a class of content.",
            "schema": {
              "type": "string",
              "example": "blockchain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "related_tags": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "cryptocurrency"
                      }
                    },
                    "given_tag": {
                      "type": "string",
                      "example": "blockchain"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tag/{tag}": {
      "get": {
        "summary": "Get Tag Info",
        "tags": [
          "Misc"
        ],
        "description": "Returns tag-related information.\n- Name\n- Followers Count\n- Number of stories\n- Number of writers\n- Number of latest stories\n- Number of latest writers\n",
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "description": "It's a unique string, usually hyphen-separated, representing a class of content.",
            "schema": {
              "type": "string",
              "example": "artificial-intelligence"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "type": "string",
                      "example": "artificial-intelligence"
                    },
                    "name": {
                      "type": "string",
                      "example": "Artificial Intelligence"
                    },
                    "followers": {
                      "type": "integer",
                      "example": 1581563
                    },
                    "articles_count": {
                      "type": "integer",
                      "example": 234250
                    },
                    "authors_count": {
                      "type": "integer",
                      "example": 87802
                    },
                    "latest_articles_count": {
                      "type": "integer",
                      "example": 483
                    },
                    "latest_authors_count": {
                      "type": "integer",
                      "example": 296
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/list/{list_id}": {
      "get": {
        "summary": "Get List Info",
        "tags": [
          "List"
        ],
        "description": "Returns the list-related information such as *id, name, author, description,  thumbnail image url, creation datetime, last article inserted datetime,  number of articles in the list, claps, voters, and comments/responses*.\n",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium List.",
            "schema": {
              "type": "string",
              "example": "38f9e0f9bea6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "38f9e0f9bea6"
                    },
                    "name": {
                      "type": "string",
                      "example": "Medium API"
                    },
                    "description": {
                      "type": "string",
                      "example": "Collections of all the articles and resources related to Medium API"
                    },
                    "author": {
                      "type": "string",
                      "description": "`user_id` of the author",
                      "example": "1985b61817c3"
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of articles in the list",
                      "example": 18
                    },
                    "responses_count": {
                      "type": "integer",
                      "format": "int32",
                      "example": 1
                    },
                    "claps": {
                      "type": "integer",
                      "format": "int32",
                      "example": 48
                    },
                    "voters": {
                      "type": "integer",
                      "format": "int32",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2023-03-12 06:46:46"
                    },
                    "last_item_inserted_at": {
                      "type": "string",
                      "example": "2023-03-12 06:53:02"
                    },
                    "thumbnail": {
                      "type": "string",
                      "description": "Image URL",
                      "example": "https://miro.medium.com/0*8f634a2860234802375db89fbfcccb5cc717f3fd.jpeg"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/list/{list_id}/articles": {
      "get": {
        "summary": "Get List Articles",
        "tags": [
          "List"
        ],
        "description": "Returns an array of `articles_ids` present in the given Medium List.\n",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium List.",
            "schema": {
              "type": "string",
              "example": "38f9e0f9bea6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "38f9e0f9bea6"
                    },
                    "list_articles": {
                      "type": "array",
                      "items": {
                        "type": "str",
                        "example": "90a01549d8db"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/list/{list_id}/responses": {
      "get": {
        "summary": "Get List Responses",
        "tags": [
          "List"
        ],
        "description": "Returns an array of `response_ids` of the comments (same as `article_ids`) on the given Medium List.\n",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "required": true,
            "description": "It's a unique hash id assigned to every Medium List.",
            "schema": {
              "type": "string",
              "example": "38f9e0f9bea6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "38f9e0f9bea6"
                    },
                    "responses": {
                      "type": "array",
                      "items": {
                        "type": "str",
                        "example": "f31a257b42e8"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search/users?query={query}": {
      "get": {
        "summary": "Search Users",
        "tags": [
          "Search"
        ],
        "description": "Returns a list of `user_ids` for the given search query results. (Max Length = 1000)\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "description": "Search query",
            "schema": {
              "type": "string",
              "example": "data engineer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "1985b61817c3"
                      }
                    },
                    "search_query": {
                      "type": "string",
                      "example": "data engineer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search/publications?query={query}": {
      "get": {
        "summary": "Search Publications",
        "tags": [
          "Search"
        ],
        "description": "Returns the list of `publication_ids` for the given search query results. (Max Length = 1000)\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "description": "Search query",
            "schema": {
              "type": "string",
              "example": "mental health"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "publications": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "8d6b8a439e32"
                      }
                    },
                    "search_query": {
                      "type": "string",
                      "example": "mental health"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search/articles?query={query}": {
      "get": {
        "summary": "Search Articles",
        "tags": [
          "Search"
        ],
        "description": "Returns the list of `articles_ids` for the given search query results. (Max Length = 1000)\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "description": "Search query",
            "schema": {
              "type": "string",
              "example": "startup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "articles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "6556feb21311"
                      }
                    },
                    "search_query": {
                      "type": "string",
                      "example": "startup"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search/tags?query={query}": {
      "get": {
        "summary": "Search Tags",
        "tags": [
          "Search"
        ],
        "description": "Returns a list of `tags` for the given search query results. (Max Length = 1000)\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "description": "Search query",
            "schema": {
              "type": "string",
              "example": "blockchain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "blockchain-technology"
                      }
                    },
                    "search_query": {
                      "type": "string",
                      "example": "blockchain"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search/lists?query={query}": {
      "get": {
        "summary": "Search Lists",
        "tags": [
          "Search"
        ],
        "description": "Returns an array of `list_ids` for the given search query results. (Max Length = 1000)\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "description": "Search query",
            "schema": {
              "type": "string",
              "example": "artificial intelligence"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lists": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "a8266c175cda"
                      }
                    },
                    "search_query": {
                      "type": "string",
                      "example": "artificial intelligence"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-rapidapi-key"
      },
      "ApiHost": {
        "type": "apiKey",
        "in": "header",
        "name": "x-rapidapi-host"
      }
    }
  }
}